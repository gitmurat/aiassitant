"use client";

import React, { useState } from "react";
import styles from "./shared/page.module.css";
import Chat from "./components/chat";
import jsPDF from "jspdf";
import { RequiredActionFunctionToolCall } from "openai/resources/beta/threads/runs/runs";

interface SuspectDetails {
  gender?: string;
  age?: string;
  hair?: string;
  clothing?: string;
  features?: string;
}

interface CrimeReportData {
  crime_type?: string;
  datetime?: string;
  location?: string;
  suspect?: SuspectDetails;
  vehicle?: string;
  weapon?: string;
  evidence?: string;
}

const FunctionCalling = () => {
  const [crimeReport, setCrimeReport] = useState<CrimeReportData>({});

  const functionCallHandler = async (call: RequiredActionFunctionToolCall) => {
    if (!call?.function?.name) return;

    if (call.function.name === "update_crime_report") {
      const args = JSON.parse(call.function.arguments) as CrimeReportData;

      setCrimeReport((prev) => ({
        ...prev,
        ...args,
      }));

      return JSON.stringify({
        success: true,
        message: "Crime report updated",
        updatedFields: args,
      });
    }

    return;
  };

  // THIS FUNCTION CLEARLY ADDED HERE:
const downloadPDFReport = () => {
  const doc = new jsPDF();

  // Header
  doc.setFontSize(20);
  doc.setFont("helvetica", "bold");
  doc.text("Official Crime Incident Report", 105, 20, { align: "center" });
  doc.setLineWidth(0.5);
  doc.line(20, 25, 190, 25);

  // Basic Report Info
  doc.setFontSize(12);
  let yPosition = 35;
  const lineSpacing = 8;

  const details = [
    ["Crime Type", crimeReport.crime_type || "N/A"],
    ["Date & Time", crimeReport.datetime || "N/A"],
    ["Location", crimeReport.location || "N/A"],
    ["Vehicle", crimeReport.vehicle || "N/A"],
    ["Weapon", crimeReport.weapon || "N/A"],
    ["Evidence", crimeReport.evidence || "N/A"],
  ];

  details.forEach(([label, value]) => {
    doc.setFont("helvetica", "bold");
    doc.text(`${label}:`, 20, yPosition);
    doc.setFont("helvetica", "normal");
    doc.text(value, 60, yPosition);
    yPosition += lineSpacing;
  });

  // Suspect Info clearly styled
  yPosition += 4;
  doc.setFont("helvetica", "bold");
  doc.text("Suspect Information", 20, yPosition);
  yPosition += lineSpacing;

  const suspectDetails = [
    ["Gender", crimeReport.suspect?.gender || "N/A"],
    ["Age", crimeReport.suspect?.age || "N/A"],
    ["Hair", crimeReport.suspect?.hair || "N/A"],
    ["Clothing", crimeReport.suspect?.clothing || "N/A"],
    ["Features", crimeReport.suspect?.features || "N/A"],
  ];

  suspectDetails.forEach(([label, value]) => {
    doc.setFont("helvetica", "bold");
    doc.text(`${label}:`, 30, yPosition);
    doc.setFont("helvetica", "normal");
    doc.text(value, 70, yPosition);
    yPosition += lineSpacing;
  });

  // Confidentiality clearly marked at the bottom
  yPosition += 10;
  doc.setFont("helvetica", "italic");
  doc.setFontSize(10);
  doc.text(
    "This document is confidential and intended for official law enforcement use only.",
    105,
    yPosition,
    { align: "center" }
  );

  // Timestamp
  const generatedOn = new Date().toLocaleString();
  doc.setFontSize(8);
  doc.text(`Report generated by DetectiveGPT on ${generatedOn}`, 105, 285, { align: "center" });

  doc.save("official_crime_report.pdf");
};



  return (
    <main className={styles.main}>
      <div className={styles.container}>
        <div className={styles.column}>
          <div style={{ marginTop: "1rem" }}>
            <h3>Crime Report</h3>
            <p><strong>Type:</strong> {crimeReport.crime_type || "N/A"}</p>
            <p><strong>When:</strong> {crimeReport.datetime || "N/A"}</p>
            <p><strong>Location:</strong> {crimeReport.location || "N/A"}</p>

            {crimeReport.suspect && (
              <div>
                <strong>Suspect Details:</strong>
                <p>Gender: {crimeReport.suspect.gender || "N/A"}</p>
                <p>Age: {crimeReport.suspect.age || "N/A"}</p>
                <p>Hair: {crimeReport.suspect.hair || "N/A"}</p>
                <p>Clothing: {crimeReport.suspect.clothing || "N/A"}</p>
                <p>Features: {crimeReport.suspect.features || "N/A"}</p>
              </div>
            )}

            <p><strong>Vehicle:</strong> {crimeReport.vehicle || "N/A"}</p>
            <p><strong>Weapon:</strong> {crimeReport.weapon || "N/A"}</p>
            <p><strong>Evidence:</strong> {crimeReport.evidence || "N/A"}</p>

            {crimeReport.crime_type && crimeReport.datetime && crimeReport.location && (
  <button 
    className="bg-blue-500 text-white px-4 py-2 rounded mt-4"
    onClick={downloadPDFReport}
  >
    Download PDF Report
  </button>
)}

          </div>
        </div>

        <div className={styles.chatContainer}>
          <div className={styles.chat}>
            <Chat functionCallHandler={functionCallHandler} />
          </div>
        </div>
      </div>
    </main>
  );
};

export default FunctionCalling;
